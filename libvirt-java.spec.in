Summary:    Java bindings for the libvirt virtualization API
Name:       libvirt-java
Version:    @version@
Prefix:     libvirt
Release:    @release@%{?dist}%{?extra_release}
License:    MIT
BuildArch:  noarch
Group:      Development/Libraries
Source:     http://libvirt.org/sources/java/%{name}-%{version}.tar.gz
URL:        http://libvirt.org/
BuildRoot:  %{_tmppath}/%{name}-%{version}-%{release}-root

Requires:   jna
Requires:   libvirt-client >= @libvirt.required@
%if 0%{?fedora} >= 21
Requires:   java-headless >= @java.required@
%else
Requires:   java >= @java.required@
%endif
Requires:   jpackage-utils
BuildRequires:  ant
BuildRequires:  jna
%if 0%{?rhel} < 8
BuildRequires:  ant-junit
%endif
BuildRequires:  java-devel >= @java.required@
BuildRequires:  jpackage-utils

#
# the jpackage-utils should provide a %{java_home} macro
# to select a different Java JVM from the default one use the following
# rpmbuild --define 'java_home /usr/lib/jvm/your_jvm_of_choice'
#

%description
Libvirt-java is a base framework allowing to use libvirt, the virtualization
API though the Java programming language.
It requires libvirt-client >= @libvirt.required@

%package    devel
Summary:    Compressed Java source files for %{name}
Group:      Development/Libraries
Requires:   %{name} = %{version}-%{release}

%description    devel
Libvirt-java is a base framework allowing to use libvirt, the virtualization
API though the Java programming language. This is the development part needed
to build applications with Libvirt-java.


%package    javadoc
Summary:    Java documentation for %{name}
Group:      Development/Documentation
Requires:   jpackage-utils

%description    javadoc
API documentation for %{name}.
%prep
%setup -q

%build
ant build jar docs

%install
rm -fr %{buildroot}
install -d -m0755 %{buildroot}%{_javadir}
install -d -m0755 %{buildroot}%{_javadocdir}/%{name}-%{version}
cp target/%{prefix}-%{version}.jar %{buildroot}%{_javadir}/%{prefix}.jar
cp -r target/javadoc/* %{buildroot}%{_javadocdir}/%{name}-%{version}
%{__ln_s} %{_javadocdir}/%{name}-%{version} %{buildroot}%{_javadocdir}/%{name}

%check
%if 0%{?rhel} < 8
ant test
%endif

%clean
rm -rf %{buildroot}

%files
%defattr(-,root,root)
%doc AUTHORS LICENSE NEWS README INSTALL
%{_javadir}/*.jar

%files devel
%defattr(-,root,root)

%files javadoc
%defattr(-,root,root)
%{_javadocdir}/%{name}-%{version}
%{_javadocdir}/%{name}

%changelog
